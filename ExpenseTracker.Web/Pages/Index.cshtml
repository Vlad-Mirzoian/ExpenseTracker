@page
@model ExpenseTracker.Web.Pages.IndexModel

<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Expense Tracker</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }

        h1, h2 {
            font-size: 24px;
            text-align: center;
            color: #333;
        }

        .container {
            display: flex;
            gap: 20px;
            margin-top: 20px;
        }

        .sidebar {
            width: 250px;
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .user-info {
            text-align: center;
            margin-bottom: 20px;
        }

            .user-info p {
                margin: 5px 0;
            }

        .categories {
            list-style-type: none;
            padding-left: 0;
            margin-top: 20px;
        }

            .categories li {
                display: flex;
                flex-direction: column;
                gap: 5px;
                margin-bottom: 15px;
            }

            .categories button {
                width: 100%;
                padding: 10px;
                background-color: #4CAF50;
                color: white;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                font-size: 16px;
                transition: background-color 0.3s;
            }

                .categories button:hover {
                    background-color: #45a049;
                }

        .edit-btn {
            background-color: #007bff;
            width: 100%;
        }

            .edit-btn:hover {
                background-color: #0056b3;
            }

        .content {
            flex-grow: 1;
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .transaction-list {
            margin-top: 30px;
        }

        .transaction-item {
            background-color: #f9f9f9;
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 10px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

            .transaction-item p {
                margin: 0;
            }

        .chart-container {
            width: 100%;
            max-width: 600px;
            margin: 0 auto;
        }

        .category-buttons {
            display: flex;
            width: 100%;
            gap: 10px;
        }

        .edit-btn, .category-btn {
            flex: 1;
            padding: 10px;
            text-align: center;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
        }

        .edit-btn {
            background-color: #007bff;
            color: white;
        }

            .edit-btn:hover {
                background-color: #0056b3;
            }

        .category-btn {
            background-color: #4CAF50;
            color: white;
        }

            .category-btn:hover {
                background-color: #45a049;
            }

    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <h1>Трекер витрат</h1>

    <div class="container">
        <!-- Левая часть: данные пользователя и категории -->
        <div class="sidebar">
            <div class="user-info">
                <img src="img/avatar.jpg" alt="Avatar" style="border-radius: 50%; width: 100px; height: 100px;">
                <p>Привіт, @Model.UserInformation.Login</p>
                <p>Токен: @Model.UserInformation.Token</p>
            </div>

            <h2>Категорії</h2>

            <!-- Переносим кнопку сразу после названия -->
            <form method="get" action="/Index">
                <button type="submit" class="category-btn">Усі</button>
            </form>
            <ul class="categories">
                @foreach (var category in Model.Categories)
                {
                    <li>
                        <div class="category-buttons">
                            <a href="@Url.Page("/EditCategory", new { id = category.Id })" class="edit-btn">✏️</a>
                            <form method="get" action="/Index" class="category-form">
                                <input type="hidden" name="id" value="@category.Id" />
                                <button type="submit" class="category-btn">@category.Name</button>
                            </form>
                        </div>
                    </li>
                }
            </ul>
        </div>

        <!-- Центральная часть: Транзакции и графики -->
        <div class="content">
            <h2>Транзакції</h2>

            <!-- Круговая диаграмма с расходами по категориям -->
            <div class="chart-container">
                <canvas id="expenseChart"></canvas>
            </div>

            <div class="transaction-list">
                @foreach (var transaction in Model.Transactions.OrderByDescending(t => t.Date))
                {
                    <div class="transaction-item">
                        <p><strong>Опис:</strong> @transaction.Description</p>
                        <p><strong>Сума:</strong> @transaction.Amount грн</p>
                        <p><strong>Дата:</strong> @transaction.Date.ToString("dd.MM.yyyy")</p>
                    </div>
                }
            </div>
        </div>
    </div>

    @{
        var selectedCategoryId = Request.Query.ContainsKey("id") ? Request.Query["id"].ToString() : null;
        var filteredTransactions = string.IsNullOrEmpty(selectedCategoryId)
        ? Model.Transactions
        : Model.Transactions.Where(t => t.CategoryId.ToString() == selectedCategoryId).ToList();

        // Словарь для сопоставления CategoryId -> Category.Name
        var categoryNames = Model.Categories.ToDictionary(c => c.Id, c => c.Name);

        var transactionData = string.IsNullOrEmpty(selectedCategoryId)
        // Все категории: группируем по названиям категорий
        ? filteredTransactions
        .GroupBy(t => categoryNames.ContainsKey(t.CategoryId) ? categoryNames[t.CategoryId] : "Невідома категорія")
        .Select(g => new
        {
            Label = g.Key,
            TotalAmount = g.Sum(t => t.Amount)
        })
        .ToList()
        // Выбрана конкретная категория: группируем по описанию
        : filteredTransactions
        .GroupBy(t => t.Description)
        .Select(g => new
        {
            Label = g.Key,
            TotalAmount = g.Sum(t => t.Amount)
        })
        .ToList();
    }

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var labels = @Html.Raw(Json.Serialize(transactionData.Select(t => t.Label)));
            var amounts = @Html.Raw(Json.Serialize(transactionData.Select(t => t.TotalAmount)));

            var ctx = document.getElementById('expenseChart').getContext('2d');
            var expenseChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Транзакції в категорії',
                        data: amounts,
                        backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56', '#4bc0c0', '#f45b69'],
                        hoverOffset: 4
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { position: 'top' },
                        tooltip: {
                            callbacks: {
                                label: function (tooltipItem) {
                                    return tooltipItem.label + ': ' + tooltipItem.raw + ' грн';
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
</body>
</html>
